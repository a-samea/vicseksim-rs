name: Rust CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  check-and-lint:
    name: Check & Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - name: Check formatting
        run: cargo fmt -- --check
      - name: Run linter
        run: cargo clippy -- -D warnings

  test:
    name: Test
    needs: check-and-lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - name: Run tests
        run: cargo test --workspace

  build-binaries:
    name: Build Binaries
    needs: test
    strategy:
      matrix:
        include:
          - platform: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            binary-name: flok
          - platform: windows-latest
            target: x86_64-pc-windows-msvc
            binary-name: flok.exe
          - platform: macos-latest
            target: x86_64-apple-darwin
            binary-name: flok
          - platform: macos-latest
            target: aarch64-apple-darwin
            binary-name: flok
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          target: ${{ matrix.target }}
      - name: Build
        run: cargo build --release --target ${{ matrix.target }}
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: flocking-cli-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/${{ matrix.binary-name }}

  create-release:
    name: Create Release
    if: startsWith(github.ref, 'refs/tags/')
    needs: build-binaries
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/**/*/*
          generate_release_notes: true